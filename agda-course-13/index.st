*[The Logic, Semantics, and Programming Languages
Group](http://www.lfcs.inf.ed.ac.uk/) at the [University of
Cambridge](http://www.cam.ac.uk/) presents:*

# Dependently typed metaprogramming (in Agda)
## [Conor McBride](http://www.cis.strath.ac.uk/cis/staff/index.php?uid=conor)
*[MSP](http://www.msp.cis.strath.ac.uk/), [University of Strathclyde](http://www.strath.ac.uk/)*

Dependently typed functional programming languages such as Agda are
capable of expressing very precise types for data. When those data
themselves encode types, we gain a powerful mechanism for abstracting
generic operations over carefully circumscribed universes. This course
will begin with a rapid depedently-typed programming primer in Agda,
then explore techniques for and consequences of universe constructions.
Of central importance are the "pattern functors" which determine the
node structure of inductive and coinductive datatypes. We shall
consider syntactic presentations of these functors (allowing
operations as useful as symbolic differentiation), and relate them to
the more uniform abstract notion of "container". We shall expose the
double-life containers lead as "interaction structures" describing
systems of effects. Later, we step up to functors over universes,
acquiring the power of inductive-recursive definitions, and we use
that power to build universes of dependent types.

  <B>Prerequisites:</B> This class assumes familiarity with typed
  functional programming, but will not require prior experience with
  depedently-typed programming nor with Agda.

  We do, however, recommend dabbling with Agda in advance. Materials from 
  an introductory Agda course can be found at

   [http://www.cl.cam.ac.uk/~ok259/agda-course](http://www.cl.cam.ac.uk/~ok259/agda-course) and

   [https://personal.cis.strath.ac.uk/conor.mcbride/pub/dtp/](https://personal.cis.strath.ac.uk/conor.mcbride/pub/dtp)

#### Location:
This course was given at the 
  [University of Cambridge Computer
Laboratory](http://www.cl.cam.ac.uk/)

#### Course Material:
All course material will be available online. 

* [Lecture notes](https://github.com/pigworker/MetaprogAgda/blob/master/notes.pdf?raw=true).

* Repository: 
   [https://github.com/pigworker/MetaprogAgda](https://github.com/pigworker/MetaprogAgda)

 After cloning the initial repository, don't forget to pull the latest changes:
 
    git pull origin

* [Video captures](http://www.youtube.com/playlist?list=PL_shDsyy0xhKhsBUaVXTJ2uJ78EGBpvQa)

#### Mailing List: 

Course announcements, discussions and questions are
welcome in the agda-course-2013 mailing list. Non-registrants: you are
welcome to join too, please email Ohad in the address above to join,
with some indication you are not a machine.

#### Schedule:

$schedule:schedule()$

#### Past Lectures:

$pastlects:lecture()$

#### Acknowledgements

Thanks to [Alan Mycroft](http://www.cl.cam.ac.uk/~am21/) for arranging
the funding! And, of course, to Conor for preparing the course!
